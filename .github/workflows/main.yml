name: Déploiement de la documentation markdown

on:
  push:
    branches: [ main ]

permissions:
  contents: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Deploy mkdocs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --prefer-binary

      # Optionnel: purement informatif, tu peux retirer si tu veux
      - name: Check mkdocs-material version
        run: pip show mkdocs-material

      # Debug court: s'assure que mkdocs lit bien mkdocs.yml et que nav est une liste
      - name: Debug mkdocs config (optional but helpful)
        run: |
          echo "== Candidate config files =="
          ls -la | egrep 'mkdocs\.ya?ml$' || true

          echo "== Quick YAML check on mkdocs.yml =="
          python - <<'PY'
          import yaml, sys, io
          with io.open('mkdocs.yml','r',encoding='utf-8') as f:
              data = yaml.safe_load(f)
          nav = data.get('nav', None)
          print("type(nav) =", type(nav).__name__, " value is None?", nav is None)
          if nav is None or not isinstance(nav, list):
              print("ERROR: nav must be a list and not None")
              sys.exit(2)
          PY

      - name: Build mkdocs (force config file)
        run: mkdocs build -f mkdocs.yml -q

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./site
          force_orphan: true
          # keep_files: false  # (par défaut) nettoie les fichiers disparus